{"chunk":11,"numChunks":16,"fileHash":"OT1E1nCU/oF1uHBrV3/HQPWCZYVu1GcjnTiimB778ug=","filePath":"internal/queries/products.go","content":"package queries\nfunc (q *ProductQueries) DeleteProductImageRecord(ctx context.Context, productID, imageID string) (string, string, error) {\n\ttx, err := q.DB.BeginTx(ctx, nil)\n\tif err != nil {\n\t\treturn \"\", \"\", err\n\t}\n\tdefer tx.Rollback()\n\n\tvar name, ext string\n\terr = tx.QueryRowContext(ctx, `SELECT name, ext FROM product_image WHERE id = ?`, imageID).Scan(&name, &ext)\n\tif err != nil {\n\t\treturn \"\", \"\", err\n\t}\n\n\tif _, err := tx.ExecContext(ctx, `DELETE FROM product_image WHERE id = ? AND product_id = ?`, imageID, productID); err != nil {\n\t\treturn \"\", \"\", err\n\t}\n\n\tif err := tx.Commit(); err != nil {\n\t\treturn \"\", \"\", err\n\t}\n\n\treturn name, ext, nil\n}\nfunc DeleteImageFiles(name, ext string) error {\n\tfilePaths := []string{\n\t\tfmt.Sprintf(\"./lc_uploads/%s.%s\", name, ext),\n\t\tfmt.Sprintf(\"./lc_uploads/%s_sm.%s\", name, ext),\n\t}\n\n\tvar removeErrors []error\n\tfor _, filePath := range filePaths {\n\t\tif err := os.Remove(filePath); err != nil {\n\t\t\tremoveErrors = append(removeErrors, fmt.Errorf(\"failed to remove file %s: %w\", filePath, err))\n\t\t}\n\t}\n\n\tif len(removeErrors) > 0 {\n\t\tvar combinedError error\n\t\tfor _, err := range removeErrors {\n\t\t\tcombinedError = fmt.Errorf(\"%v; %w\", combinedError, err)\n\t\t}\n\t\treturn fmt.Errorf(\"one or more files could not be removed: %w\", combinedError)\n\t}\n\n\treturn nil\n}"}