{"chunk":2,"numChunks":3,"fileHash":"NbpFlJMTJMIahr8oR9S2b+yQPU4MFYrzUZFzIvxSrrI=","filePath":"web/admin/src/pages/settings/payment.vue","content":"  <drawer :is-open=\"isDrawer.open\" max-width=\"725px\" @close=\"closeDrawer\">\n    <Stripe :close=\"closeDrawer\" v-if=\"isDrawer.action === 'stripe'\" />\n    <Paypal :close=\"closeDrawer\" v-if=\"isDrawer.action === 'paypal'\" />\n    <Spectrocoin :close=\"closeDrawer\" v-if=\"isDrawer.action === 'spectrocoin'\" />\n  </drawer>\n</template>\n\n<script setup>\nimport { onMounted, ref } from \"vue\";\nimport { FormSelect, FormButton, Drawer, Stripe, Paypal, Spectrocoin } from \"@/components/\";\nimport { showMessage } from \"@/utils/message\";\nimport { useSystemStore } from '@/store/system';\nimport { apiGet, apiUpdate } from \"@/utils/api\";\nimport { Form } from \"vee-validate\";\n\nconst store = useSystemStore();\nconst payment = ref({});\n\nonMounted(() => {\n  apiGet(`/api/_/settings/payment`).then(res => {\n    if (res.success) {\n      payment.value = res.result;\n    }\n  });\n  apiGet(`/api/cart/payment`).then(res => {\n    if (res.success) {\n      store.payments = res.result;\n    }\n  });\n});\n\nconst updateSetting = async () => {\n  await apiUpdate(`/api/_/settings/payment`, payment.value).then(res => {\n    if (res.success) {\n      showMessage(res.message);\n    } else {\n      showMessage(res.result, \"connextError\");\n    }\n  });\n};\n\nconst isDrawer = ref({\n  open: false,\n  action: null,\n});\n\nconst openDrawer = (action) => {\n  isDrawer.value.open = true;\n  isDrawer.value.action = action;\n};\n\nconst closeDrawer = () => {\n  isDrawer.value.open = false;\n  isDrawer.value.action = null;\n};\n</script>\n"}