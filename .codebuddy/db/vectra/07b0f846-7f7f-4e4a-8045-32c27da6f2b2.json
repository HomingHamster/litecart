{"chunk":0,"numChunks":1,"fileHash":"ot5acvg1+Fqji3cBaY8P0heg+jf8z/hqfVfylv/IjHo=","filePath":"pkg/archive/archive.go","content":"package archive\n\nimport (\n\t\"fmt\"\n\t\"io\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"strings\"\n)\n\n// Archive is ...\ntype Archive interface {\n\tDirectory(name string) error\n\tHeader(os.FileInfo) (io.Writer, error)\n\tClose() error\n}\n\nfunc extractFile(path string, mode os.FileMode, data io.Reader, dest string) error {\n\ttarget := filepath.Join(dest, filepath.FromSlash(path))\n\tif !strings.HasPrefix(target, filepath.Clean(dest)+string(os.PathSeparator)) {\n\t\treturn fmt.Errorf(\"path %q escapes archive destination\", target)\n\t}\n\n\tif err := os.MkdirAll(filepath.Dir(target), 0755); err != nil {\n\t\treturn err\n\t}\n\n\tfile, err := os.OpenFile(target, os.O_CREATE|os.O_WRONLY|os.O_TRUNC, mode)\n\tif err != nil {\n\t\treturn err\n\t}\n\tif _, err := io.Copy(file, data); err != nil {\n\t\tfile.Close()\n\t\tos.Remove(target)\n\t\treturn err\n\t}\n\treturn file.Close()\n}\n"}