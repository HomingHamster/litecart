{"chunk":0,"numChunks":4,"fileHash":"G6dlSmqav4lXHGSZSVz1qW7mVIEhz6QMW+zjcZm8ERI=","filePath":"web/admin/src/components/Editor.vue","content":"<template>\n  <div class=\"editor\" v-if=\"editor\">\n    <button v-for=\"action in editorActions\" :key=\"action.name\" @click=\"performEditorAction(action.method, action.activeCondition.options)\"\n      :disabled=\"canPerformEditorAction(action.method)\" :class=\"{ 'is-active': !action.stroke && editor.isActive(action.activeCondition.type, action.activeCondition.options) }\">\n      <SvgIcon :name=\"action.icon\" :stroke=\"action.stroke\" />\n    </button>\n  </div>\n\n  <article class=\"mt-5\">\n    <EditorContent :editor=\"editor\" />\n  </article>\n</template>\n\n<script setup>\nimport { onBeforeUnmount, onMounted, ref, watch } from \"vue\";\nimport { EditorContent, Editor } from \"@tiptap/vue-3\";\nimport Placeholder from '@tiptap/extension-placeholder'\nimport StarterKit from \"@tiptap/starter-kit\";\n\nconst emits = defineEmits([\"update:modelValue\"]);\nconst editor = ref();\nconst props = defineProps({\n  modelValue: {\n    type: String,\n    required: true,\n    default: \"\",\n  },\n  placeholder: String,\n});\n\nconst editorActions = [\n  { name: 'undo', method: 'undo', icon: 'undo', stroke: 'currentColor', activeCondition: {} },\n  { name: 'redo', method: 'redo', icon: 'redo', stroke: 'currentColor', activeCondition: {} },\n  { name: 'bold', method: 'toggleBold', icon: 'bold', activeCondition: { type: 'bold' } },\n  { name: 'italic', method: 'toggleItalic', icon: 'italic', activeCondition: { type: 'italic' } },\n  { name: 'strike', method: 'toggleStrike', icon: 'strike', activeCondition: { type: 'strike' } },\n"}