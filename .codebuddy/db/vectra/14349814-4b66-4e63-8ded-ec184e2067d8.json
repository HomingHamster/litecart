{"chunk":6,"numChunks":7,"fileHash":"uGqTN4rV0zsU/GWluD0mH60Iqkfxyh88yA44W8jyI/4=","filePath":"internal/queries/cart.go","content":"package queries\nfunc (q *CartQueries) formatPurchaseContent(content *purchaseContent) string {\n\tvar purchases strings.Builder\n\tcount := 1\n\n\tif len(content.keys) > 0 {\n\t\tpurchases.WriteString(\"Keys:\\n\")\n\t\tfor _, key := range content.keys {\n\t\t\tpurchases.WriteString(fmt.Sprintf(\"%v: %s\\n\", count, key.Content))\n\t\t\tcount++\n\t\t}\n\t}\n\n\tif len(content.files) > 0 {\n\t\tpurchases.WriteString(\"Files:\\n\")\n\t\tfor _, file := range content.files {\n\t\t\tpurchases.WriteString(fmt.Sprintf(\"%v: %s\\n\", count, file.OrigName))\n\t\t\tcount++\n\t\t}\n\t}\n\n\treturn purchases.String()\n}\nfunc (q *CartQueries) processProduct(ctx context.Context, tx *sql.Tx, cartID string, cart models.CartProduct, content *purchaseContent) error {\n\tvar digitalType string\n\terr := tx.QueryRowContext(ctx, `SELECT digital FROM product WHERE id = ?`, cart.ProductID).Scan(&digitalType)\n\tif err != nil {\n\t\tif err == sql.ErrNoRows {\n\t\t\treturn errors.ErrPageNotFound\n\t\t}\n\t\treturn err\n\t}\n\n\tswitch digitalType {\n\tcase \"file\":\n\t\treturn q.processFileProduct(ctx, tx, cart.ProductID, content)\n\tcase \"data\":\n\t\treturn q.processDataProduct(ctx, tx, cartID, cart.ProductID, content)\n\t}\n\n\treturn nil\n}"}