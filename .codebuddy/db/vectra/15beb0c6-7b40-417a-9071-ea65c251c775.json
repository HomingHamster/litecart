{"chunk":0,"numChunks":1,"fileHash":"AaL4eyV2YNWfCT+gZYMxDuani+NzcNPzSh035h0Agu0=","filePath":"internal/queries/queries.go","content":"package queries\n\nimport (\n\t\"database/sql\"\n\t\"embed\"\n\n\t\"github.com/shurco/litecart/internal/base\"\n\t_ \"modernc.org/sqlite\"\n)\n\nvar db *Base\n\n// Define the structure 'Base' that aggregates various queries related to different modules like\n// settings, authentication, installation, pages, products, and cart management.\ntype Base struct {\n\tSettingQueries\n\tAuthQueries\n\tInstallQueries\n\tPageQueries\n\tProductQueries\n\tCartQueries\n}\n\n// New initializes the application's database and returns an error if any occurs during the process.\n// It takes an 'embed.FS' which represents the file system intended to be used with embedded files.\nfunc New(embed embed.FS) (err error) {\n\tvar sqlite *sql.DB\n\tsqlite, err = base.New(\"./lc_base/data.db\", embed)\n\tif err != nil {\n\t\treturn\n\t}\n\n\tdb = &Base{\n\t\tAuthQueries:    AuthQueries{DB: sqlite},\n\t\tInstallQueries: InstallQueries{DB: sqlite},\n\t\tSettingQueries: SettingQueries{DB: sqlite},\n\t\tPageQueries:    PageQueries{DB: sqlite},\n\t\tProductQueries: ProductQueries{DB: sqlite},\n\t\tCartQueries:    CartQueries{DB: sqlite},\n\t}\n\treturn\n}\n\n// DB is a function that ensures a singleton instance of 'Base' is always returned.\n// If 'db' is not already initialized, it initializes it before returning.\nfunc DB() *Base {\n\tif db == nil {\n\t\tdb = &Base{}\n\t}\n\treturn db\n}\n"}