{"chunk":0,"numChunks":2,"fileHash":"6vfap47dnl6d3yd1Ljtgzt0W/qkmyngng1JpagnqWzc=","filePath":"internal/handlers/private/page.go","content":"package handlers\nimport (\n\t\"github.com/gofiber/fiber/v2\"\n\n\t\"github.com/shurco/litecart/internal/models\"\n\t\"github.com/shurco/litecart/internal/queries\"\n\t\"github.com/shurco/litecart/pkg/logging\"\n\t\"github.com/shurco/litecart/pkg/webutil\"\n)\n// Pages is ...\n// [get] /api/_/pages\nfunc Pages(c *fiber.Ctx) error {\n\tdb := queries.DB()\n\tlog := logging.New()\n\n\tpages, err := db.ListPages(c.Context(), true)\n\tif err != nil {\n\t\tlog.ErrorStack(err)\n\t\treturn webutil.StatusInternalServerError(c)\n\t}\n\n\treturn webutil.Response(c, fiber.StatusOK, \"Pages\", pages)\n}\n// AddPage is ...\n// [post] /api/_/page/\nfunc AddPage(c *fiber.Ctx) error {\n\tdb := queries.DB()\n\tlog := logging.New()\n\trequest := new(models.Page)\n\n\tif err := c.BodyParser(request); err != nil {\n\t\tlog.ErrorStack(err)\n\t\treturn webutil.StatusBadRequest(c, err.Error())\n\t}\n\n\tpage, err := db.AddPage(c.Context(), request)\n\tif err != nil {\n\t\tlog.ErrorStack(err)\n\t\treturn webutil.StatusInternalServerError(c)\n\t}\n\n\treturn webutil.Response(c, fiber.StatusOK, \"Page added\", page)\n}\n// UpdatePage is ...\n// [patch] /api/_/pages/:page_id"}