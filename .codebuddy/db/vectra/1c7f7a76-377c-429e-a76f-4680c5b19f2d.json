{"chunk":0,"numChunks":3,"fileHash":"AfCyQ6Snlb+SlFVONwpxveJBuIYNmZ3EjocmeC7ltq4=","filePath":"internal/queries/pages.go","content":"package queries\nimport (\n\t\"context\"\n\t\"database/sql\"\n\t\"encoding/json\"\n\n\t\"github.com/shurco/litecart/internal/models\"\n\t\"github.com/shurco/litecart/pkg/errors\"\n\t\"github.com/shurco/litecart/pkg/security\"\n)\n// PageQueries is a struct that embeds a pointer to an sql.DB.\n// This allows for direct access to database methods on the PageQueries struct,\n// effectively extending it with all the methods of *sql.DB.\ntype PageQueries struct {\n\t*sql.DB\n}\n// IsPage checks if a page with the given slug exists in the database.\n// It uses the context provided for any query-related timeouts or cancellations.\nfunc (q *PageQueries) IsPage(ctx context.Context, slug string) bool {\n\tvar exists bool\n\terr := q.DB.QueryRowContext(ctx, `SELECT EXISTS(SELECT 1 FROM page WHERE slug = ?)`, slug).Scan(&exists)\n\treturn err == nil && exists\n}\n// ListPages retrieves a list of pages from the database.\n// It filters out private pages unless `private` is set to true,\n// and can also filter by a list of page IDs if provided."}