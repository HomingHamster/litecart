{"chunk":7,"numChunks":16,"fileHash":"OT1E1nCU/oF1uHBrV3/HQPWCZYVu1GcjnTiimB778ug=","filePath":"internal/queries/products.go","content":"package queries\n// AddProduct inserts a new product into the database and returns the product with the created timestamp.\nfunc (q *ProductQueries) AddProduct(ctx context.Context, product *models.Product) (*models.Product, error) {\n\tproduct.ID = security.RandomString()\n\n\tmetadata, err := json.Marshal(product.Metadata)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\tattributes, err := json.Marshal(product.Attributes)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\tquery := `\n\t\t\tINSERT INTO product (\n\t\t\t\t\tid, name, amount, slug, metadata, attribute, brief, desc, digital, active\n\t\t\t) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, FALSE)\n\t\t\tRETURNING strftime('%s', created)\n\t`\n\tstmt, err := q.DB.PrepareContext(ctx, query)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tdefer stmt.Close()\n\n\terr = stmt.QueryRowContext(ctx,\n\t\tproduct.ID, product.Name, product.Amount, product.Slug,\n\t\tmetadata, attributes, product.Brief, product.Description, product.Digital.Type,\n\t).Scan(&product.Created)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\treturn product, nil\n}"}