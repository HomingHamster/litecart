{"chunk":3,"numChunks":7,"fileHash":"J5Ak0Ij4rhitK/uI7uWEFcPqQxN9VG6Mju20cl3spWY=","filePath":"pkg/litepay/provider_paypal.go","content":"package litepay\nfunc (c *paypal) Pay(cart Cart) (*Payment, error) {\n\torderJson, err := json.Marshal(order)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tbody := strings.NewReader(string(orderJson))\n\n\treq, err := http.NewRequest(\n\t\thttp.MethodPost,\n\t\tc.api+\"/v2/checkout/orders\",\n\t\tbody,\n\t)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treq.Header.Add(\"Authorization\", fmt.Sprintf(\"Bearer %s\", accessToken))\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\n\tresp, err := http.DefaultClient.Do(req)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tdefer resp.Body.Close()\n\n\tvar data struct {\n\t\tID    string `json:\"id\"`\n\t\tLinks []struct {\n\t\t\tHref   string `json:\"href\"`\n\t\t\tRel    string `json:\"rel\"`\n\t\t\tMethod string `json:\"method\"`\n\t\t} `json:\"links\"`\n\t\tStatus string `json:\"status\"`\n\t}\n\tif err := json.NewDecoder(resp.Body).Decode(&data); err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to decode order response: %v\", err)\n\t}\n\n\tcheckout := &Payment{"}