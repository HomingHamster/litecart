{"chunk":0,"numChunks":1,"fileHash":"VUpuzJUfWUF/FXrpVC+TEVqC3ewqChPBl2Z7h6+VLGk=","filePath":"internal/middleware/jwt.go","content":"package middleware\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"strings\"\n\t\"time\"\n\n\tjwtMiddleware \"github.com/gofiber/contrib/jwt\"\n\t\"github.com/gofiber/fiber/v2\"\n\t\"github.com/golang-jwt/jwt/v5\"\n\n\t\"github.com/shurco/litecart/internal/models\"\n\t\"github.com/shurco/litecart/internal/queries\"\n\t\"github.com/shurco/litecart/pkg/webutil\"\n)\n\n// JWTProtected is ...\nfunc JWTProtected() func(*fiber.Ctx) error {\n\tconfig := jwtMiddleware.Config{\n\t\tKeyFunc:      customKeyFunc(),\n\t\tContextKey:   \"jwt\",\n\t\tErrorHandler: jwtError,\n\t\tTokenLookup:  \"cookie:token\",\n\t}\n\n\treturn jwtMiddleware.New(config)\n}\n\nfunc jwtError(c *fiber.Ctx, err error) error {\n\tpath := strings.Split(c.Path(), \"/\")[1]\n\tif path == \"api\" {\n\t\tif err.Error() == \"Missing or malformed token\" {\n\t\t\treturn webutil.Response(c, fiber.StatusBadRequest, \"Bad request\", err.Error())\n\t\t}\n\t\treturn webutil.Response(c, fiber.StatusUnauthorized, \"Unauthorized\", err.Error())\n\t}\n\n\treturn c.Redirect(\"/_/signin\")\n}\n\nfunc customKeyFunc() jwt.Keyfunc {\n\treturn func(t *jwt.Token) (interface{}, error) {\n\t\tif t.Method.Alg() != jwtMiddleware.HS256 {\n\t\t\treturn nil, fmt.Errorf(\"Unexpected jwt signing method=%v\", t.Header[\"alg\"])\n\t\t}\n\n\t\tctx, cancel := context.WithTimeout(context.Background(), 5*time.Second)\n\t\tdefer cancel()\n\n\t\tdb := queries.DB()\n\t\tsettingJWT, _ := queries.GetSettingByGroup[models.JWT](ctx, db)\n\t\treturn []byte(settingJWT.Secret), nil\n\t}\n}\n"}