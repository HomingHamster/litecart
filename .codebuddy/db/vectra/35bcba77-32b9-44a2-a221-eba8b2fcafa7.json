{"chunk":3,"numChunks":6,"fileHash":"czUvAHNcQlI0FXMljKWUA9kENxZxEmfOz2Rm1naI2w0=","filePath":"web/admin/src/components/product/Update.vue","content":"            <FormButton type=\"submit\" name=\"Close\" color=\"gray\" @click=\"close\" />\n          </div>\n          <div class=\"grow\"></div>\n          <div class=\"mt-2 flex-none\">\n            <span @click=\"deleteProduct\" class=\"cursor-pointer text-red-700\">Delete</span>\n          </div>\n        </div>\n      </div>\n    </Form>\n  </div>\n</template>\n\n<script setup>\nimport { onMounted, computed, ref } from \"vue\";\nimport { FormInput, FormButton, FormTextarea, FormUpload, Editor } from \"@/components/\";\nimport { costFormat, costStripe } from \"@/utils/\";\nimport { showMessage } from \"@/utils/message\";\nimport { apiGet, apiUpdate, apiDelete } from \"@/utils/api\";\nimport { Form } from \"vee-validate\";\n\nconst amount = ref();\nconst product = ref({});\nconst props = defineProps({\n  drawer: {\n    required: true,\n  },\n  products: {\n    required: true,\n  },\n  updateActive: Function,\n  close: Function,\n});\n\nconst emits = defineEmits([\"update:modelValue\"]);\nconst products = computed({\n  get: () => {\n    return props.products;\n  },\n  set: (val) => {\n    emits(\"update:modelValue\", val);\n  },\n});\n\nonMounted(() => {\n  apiGet(`/api/_/products/${products.value.products[props.drawer.product.index].id}`,).then((res) => {\n    if (res.success) {\n      product.value = res.result;\n      amount.value = costFormat(product.value.amount);\n      if (!product.value.images) {\n        product.value.images = [];\n      }\n    } else {\n      showMessage(res.result, \"connextError\");\n    }\n  });\n});\n\nconst updateProduct = async () => {\n  product.value.amount = costStripe(amount.value);\n"}