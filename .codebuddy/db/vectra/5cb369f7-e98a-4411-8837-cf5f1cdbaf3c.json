{"chunk":0,"numChunks":1,"fileHash":"X8hN/BYzwy/rBsp5/aNHUPpB0gm8Vy/vciMiuBh3GzI=","filePath":"internal/mailer/mailer.go","content":"package mailer\nimport (\n\t\"bytes\"\n\t\"fmt\"\n\t\"text/template\"\n\t\"time\"\n\n\tmailer \"github.com/xhit/go-simple-mail/v2\"\n\n\t\"github.com/shurco/litecart/internal/models\"\n)\nvar EncryptionTypes = map[string]mailer.Encryption{\n\t\"None\":     mailer.EncryptionNone,\n\t\"SSL/TLS\":  mailer.EncryptionSSL,\n\t\"STARTTLS\": mailer.EncryptionTLS,\n}\n// SendMail is ...\nfunc SendMail(smtp *models.Mail, mail *models.MessageMail) error {\n\tserver := mailer.NewSMTPClient()\n\tserver.Host = smtp.SMTP.Host\n\tserver.Port = smtp.SMTP.Port\n\tserver.Username = smtp.SMTP.Username\n\tserver.Password = smtp.SMTP.Password\n\tserver.Encryption = EncryptionTypes[smtp.SMTP.Encryption]\n\n\tserver.KeepAlive = false\n\tserver.ConnectTimeout = 10 * time.Second\n\tserver.SendTimeout = 10 * time.Second\n\n\tsmtpClient, err := server.Connect()\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tfrom := fmt.Sprintf(\"%s <%s>\", smtp.SenderName, smtp.SenderEmail)\n\temail := mailer.NewMSG()\n\temail.SetFrom(from).\n\t\tAddTo(mail.To).\n\t\tSetSubject(mail.Letter.Subject)\n\n\tbodyText, err := textTemplate(mail.Letter.Text, mail.Data)\n\tif err != nil {\n\t\treturn err\n\t}\n\temail.SetBodyData(mailer.TextPlain, bodyText)\n\t// email.AddAlternativeData(mail.TextPlain, \"Hello Gophers!\")\n\n\tif len(mail.Files) > 0 {\n\t\tfor _, file := range mail.Files {\n\t\t\temail.Attach(&mailer.File{\n\t\t\t\tFilePath: fmt.Sprintf(\"./lc_digitals/%s.%s\", file.Name, file.Ext),\n\t\t\t\tName:     file.OrigName,\n\t\t\t})\n\t\t}\n\t}\n\n\tif err := email.Send(smtpClient); err != nil {\n\t\treturn err\n\t}\n\n\treturn nil\n}"}