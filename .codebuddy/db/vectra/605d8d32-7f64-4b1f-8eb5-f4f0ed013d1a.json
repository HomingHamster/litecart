{"chunk":1,"numChunks":2,"fileHash":"QFCUMJLZAxY6HVNsG0MMBSNQx6JFYlujQOkgj2WtCec=","filePath":"web/admin/src/components/setting/Spectrocoin.vue","content":"</template>\n\n<script setup>\nimport { onMounted, ref } from \"vue\";\nimport { FormInput, FormButton, FormTextarea, FormToggle } from \"@/components/\";\nimport { useSystemStore } from '@/store/system';\nimport { showMessage } from \"@/utils/message\";\nimport { apiGet, apiUpdate } from \"@/utils/api\";\nimport { Form } from \"vee-validate\";\n\nconst settings = ref({});\nconst store = useSystemStore();\nconst props = defineProps({\n  close: Function,\n});\n\nonMounted(() => {\n  apiGet(`/api/_/settings/spectrocoin`).then((res) => {\n    if (res.success) {\n      settings.value.active = res.result.active;\n      settings.value.merchant_id = res.result.merchant_id;\n      settings.value.project_id = res.result.project_id;\n      settings.value.private_key = res.result.private_key;\n    }\n  });\n});\n\nconst updateSetting = async () => {\n  const update = {\n    \"merchant_id\": settings.value.merchant_id,\n    \"project_id\": settings.value.project_id,\n    \"private_key\": settings.value.private_key,\n    \"active\": settings.value.active,\n  };\n\n  apiUpdate(`/api/_/settings/spectrocoin`, update).then(res => {\n    if (res.success) {\n      showMessage(res.message);\n    } else {\n      showMessage(res.result, \"connextError\");\n    }\n  });\n};\n\nconst active = () => {\n  const update = {\n    value: settings.value.active,\n  };\n\n  apiUpdate(`/api/_/settings/spectrocoin_active`, update).then(res => {\n    if (res.success) {\n      store.payments['spectrocoin'] = settings.value.active;\n      showMessage(res.message);\n    } else {\n      showMessage(res.result, \"connextError\");\n    }\n  });\n};\n</script>\n"}