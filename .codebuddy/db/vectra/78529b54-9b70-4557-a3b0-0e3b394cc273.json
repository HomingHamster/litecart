{"chunk":1,"numChunks":6,"fileHash":"imwY4wUQn09mhFNJRd4eTEiv/yHDHMb5RBW4LzNA+S0=","filePath":"internal/handlers/private/setting.go","content":"package handlers\nfunc Version(c *fiber.Ctx) error {\n\tdb := queries.DB()\n\tlog := logging.New()\n\n\tsession, err := db.GetSession(c.Context(), \"update\")\n\tif err != nil && err != sql.ErrNoRows {\n\t\tlog.ErrorStack(err)\n\t\treturn webutil.StatusInternalServerError(c)\n\t}\n\n\tversion := (*update.Version)(nil)\n\tif err == sql.ErrNoRows {\n\t\tversion = update.VersionInfo()\n\n\t\trelease, err := update.FetchLatestRelease(context.Background(), \"shurco\", \"litecart\")\n\t\tif err != nil {\n\t\t\tlog.ErrorStack(err)\n\t\t\treturn webutil.StatusInternalServerError(c)\n\t\t}\n\n\t\tif version.CurrentVersion != release.Name {\n\t\t\tversion.NewVersion = release.Name\n\t\t\tversion.ReleaseURL = release.GetUrl()\n\t\t}\n\n\t\tif err := db.DeleteSession(c.Context(), \"update\"); err != nil {\n\t\t\tlog.ErrorStack(err)\n\t\t\treturn webutil.StatusInternalServerError(c)\n\t\t}\n\n\t\tjson, _ := json.Marshal(version)\n\t\texpires := time.Now().Add(24 * time.Hour).Unix()\n\t\tif err := db.AddSession(c.Context(), \"update\", string(json), expires); err != nil {\n\t\t\tlog.ErrorStack(err)\n\t\t\treturn webutil.StatusInternalServerError(c)\n\t\t}\n\t}\n\n\tif session != \"\" {\n\t\tversion = new(update.Version)\n\t\tjson.Unmarshal([]byte(session), version)\n\t}\n\n\treturn webutil.Response(c, fiber.StatusOK, \"Version\", version)\n}\n// GetSetting is ...\n// [get] /api/_/settings/:setting_key"}