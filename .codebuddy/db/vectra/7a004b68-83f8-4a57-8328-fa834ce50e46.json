{"chunk":2,"numChunks":7,"fileHash":"uGqTN4rV0zsU/GWluD0mH60Iqkfxyh88yA44W8jyI/4=","filePath":"internal/queries/cart.go","content":"package queries\nfunc (q *CartQueries) Cart(ctx context.Context, cartId string) (*models.Cart, error) {\n\tquery := `\n\tSELECT \n    id, \n    email, \n    amount_total,\n    currency,\n    payment_id,\n    payment_status,\n    strftime('%s', created),\n    strftime('%s', updated)\n\tFROM cart\n\tWHERE id = ?\n\t`\n\n\tvar email, paymentID sql.NullString\n\tvar created, updated sql.NullInt64\n\tcart := &models.Cart{}\n\n\terr := q.DB.QueryRowContext(ctx, query, cartId).\n\t\tScan(\n\t\t\t&cart.ID,\n\t\t\t&email,\n\t\t\t&cart.AmountTotal,\n\t\t\t&cart.Currency,\n\t\t\t&paymentID,\n\t\t\t&cart.PaymentStatus,\n\t\t\t&created,\n\t\t\t&updated,\n\t\t)\n\tif err != nil {\n\t\tif err == sql.ErrNoRows {\n\t\t\treturn nil, errors.ErrProductNotFound\n\t\t}\n\t\treturn nil, err\n\t}\n\n\tcart.Email = email.String\n\tcart.PaymentID = paymentID.String\n\tif created.Valid {\n\t\tcart.Created = created.Int64\n\t}\n\n\tif updated.Valid {\n\t\tcart.Updated = updated.Int64\n\t}\n\n\treturn cart, nil\n}\n// AddCart inserts a new cart into the database.\nfunc (q *CartQueries) AddCart(ctx context.Context, cart *models.Cart) error {\n\tbyteCart, err := json.Marshal(cart.Cart)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tquery := `INSERT INTO cart (id, email, cart, amount_total, currency, payment_status, payment_system) VALUES (?, ?, ?, ?, ?, ?, ?)`\n\t_, err = q.DB.ExecContext(ctx, query, cart.ID, cart.Email, string(byteCart), cart.AmountTotal, cart.Currency, cart.PaymentStatus, cart.PaymentSystem)\n\treturn err\n}\n// UpdateCart updates the cart details in the database."}