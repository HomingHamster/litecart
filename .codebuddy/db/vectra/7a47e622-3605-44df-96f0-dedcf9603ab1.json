{"chunk":0,"numChunks":1,"fileHash":"0evu2veMogJU3GXg0LoEQAJfczB1ulb7QBsQ3SrB2oQ=","filePath":"pkg/webutil/webutil.go","content":"package webutil\n\nimport (\n\t\"github.com/gofiber/fiber/v2\"\n\t\"github.com/gofiber/utils\"\n)\n\n// HTTPResponse represents response body of API\ntype HTTPResponse struct {\n\tSuccess bool   `json:\"success\"`\n\tMessage string `json:\"message\"`\n\tResult  any    `json:\"result,omitempty\"`\n}\n\n// Response is a takes in a Fiber context object, an HTTP status code, a message string and some data.\nfunc Response(c *fiber.Ctx, status int, message string, data any) error {\n\tif len(message) > 0 {\n\t\treturn c.Status(status).JSON(HTTPResponse{\n\t\t\tSuccess: status == fiber.StatusOK,\n\t\t\tMessage: message,\n\t\t\tResult:  data,\n\t\t})\n\t}\n\n\treturn c.Status(status).JSON(data)\n}\n\n// StatusOK is ...\nfunc StatusOK(c *fiber.Ctx, message string, data any) error {\n\treturn Response(c, fiber.StatusOK, message, data)\n}\n\n// StatusNotFound is ...\nfunc StatusNotFound(c *fiber.Ctx) error {\n\treturn Response(c, fiber.StatusNotFound, utils.StatusMessage(fiber.StatusNotFound), nil)\n}\n\n// StatusBadRequest is ...\nfunc StatusBadRequest(c *fiber.Ctx, data any) error {\n\treturn Response(c, fiber.StatusBadRequest, utils.StatusMessage(fiber.StatusBadRequest), data)\n}\n\n// StatusInternalServerError is ...\nfunc StatusInternalServerError(c *fiber.Ctx) error {\n\treturn Response(c, fiber.StatusInternalServerError, utils.StatusMessage(fiber.StatusInternalServerError), nil)\n}\n"}