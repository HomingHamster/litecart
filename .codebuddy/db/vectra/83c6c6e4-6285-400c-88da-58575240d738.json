{"chunk":0,"numChunks":1,"fileHash":"1hgOi3WzCcWaJIRGTYS8Enu9qcNlMcoK1M6mt580mK0=","filePath":"internal/queries/auth.go","content":"package queries\n\nimport (\n\t\"context\"\n\t\"database/sql\"\n\n\t\"github.com/shurco/litecart/pkg/errors\"\n)\n\n// AuthQueries is a struct that embeds *sql.DB to provide database functionality.\n// This structure can be used to create methods that will execute SQL queries related to authentication.\ntype AuthQueries struct {\n\t*sql.DB\n}\n\n// GetPasswordByEmail retrieves the password for a user by their email.\nfunc (q *AuthQueries) GetPasswordByEmail(ctx context.Context, email string) (string, error) {\n\tquery := `SELECT key, value FROM setting WHERE key IN ('email', 'password')`\n\trows, err := q.DB.QueryContext(ctx, query)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\tdefer rows.Close()\n\n\tfor rows.Next() {\n\t\tvar key, value string\n\t\terr := rows.Scan(&key, &value)\n\t\tif err != nil {\n\t\t\treturn \"\", err\n\t\t}\n\n\t\tswitch key {\n\t\tcase \"email\":\n\t\t\tif value != email {\n\t\t\t\treturn \"\", errors.ErrUserEmailNotFound\n\t\t\t}\n\t\tcase \"password\":\n\t\t\tif value == \"\" {\n\t\t\t\treturn \"\", errors.ErrUserPasswordNotFound\n\t\t\t}\n\t\t\treturn value, nil\n\t\t}\n\t}\n\n\treturn \"\", errors.ErrUserNotFound\n}\n"}