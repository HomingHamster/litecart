{"chunk":1,"numChunks":2,"fileHash":"2a0Td9hqJP+ffTsI4JzB4/ymNnaC3Kdrw6Jzq7/t39U=","filePath":"web/admin/src/components/setting/Letter.vue","content":"import { FormInput, FormButton, FormTextarea } from \"@/components/\";\nimport { showMessage } from \"@/utils/message\";\nimport { apiGet, apiUpdate } from \"@/utils/api\";\n\nconst letter = ref({});\nconst props = defineProps({\n  name: String,\n  legend: Object,\n  send: Function,\n  close: Function,\n});\n\nonMounted(() => {\n  apiGet(`/api/_/settings/${props.name}`).then(res => {\n    if (res.success) {\n      const setting = res.result[props.name];\n      letter.value.id = setting.id;\n      letter.value.key = setting.key;\n      letter.value.subject = JSON.parse(setting.value).subject;\n      letter.value.text = JSON.parse(setting.value).text;\n      letter.value.html = JSON.parse(setting.value).html;\n    }\n  });\n});\n\nconst updateLetter = async () => {\n  const value = new Object();\n  value.subject = letter.value.subject;\n  value.text = letter.value.text;\n  value.html = letter.value.html;\n\n  const update = {\n    id: letter.value.id,\n    key: letter.value.key,\n    value: JSON.stringify(value),\n  };\n\n  apiUpdate(`/api/_/settings/${props.name}`, update).then(res => {\n    if (res.success) {\n      showMessage(res.message);\n      //props.close();\n    } else {\n      showMessage(res.result, \"connextError\");\n    }\n  });\n};\n</script>\n"}