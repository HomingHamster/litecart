{"chunk":1,"numChunks":2,"fileHash":"6vfap47dnl6d3yd1Ljtgzt0W/qkmyngng1JpagnqWzc=","filePath":"internal/handlers/private/page.go","content":"package handlers\nfunc UpdatePage(c *fiber.Ctx) error {\n\tpageID := c.Params(\"page_id\")\n\tdb := queries.DB()\n\tlog := logging.New()\n\trequest := new(models.Page)\n\trequest.ID = pageID\n\n\tif err := c.BodyParser(request); err != nil {\n\t\tlog.ErrorStack(err)\n\t\treturn webutil.StatusBadRequest(c, err.Error())\n\t}\n\n\tif err := db.UpdatePage(c.Context(), request); err != nil {\n\t\tlog.ErrorStack(err)\n\t\treturn webutil.StatusInternalServerError(c)\n\t}\n\n\treturn webutil.Response(c, fiber.StatusOK, \"Page updated\", nil)\n}\n// DeletePage is ...\n// [delete] /api/_/pages/:page_id\nfunc DeletePage(c *fiber.Ctx) error {\n\tpageID := c.Params(\"page_id\")\n\tdb := queries.DB()\n\tlog := logging.New()\n\n\tif err := db.DeletePage(c.Context(), pageID); err != nil {\n\t\tlog.ErrorStack(err)\n\t\treturn webutil.StatusInternalServerError(c)\n\t}\n\n\treturn webutil.Response(c, fiber.StatusOK, \"Page deleted\", nil)\n}\n// UpdatePageContent is ...\n// [get] /api/_/page/:page_id/content\nfunc UpdatePageContent(c *fiber.Ctx) error {\n\tdb := queries.DB()\n\tlog := logging.New()\n\tpageID := c.Params(\"page_id\")\n\n\trequest := &models.Page{\n\t\tCore: models.Core{\n\t\t\tID: pageID,\n\t\t},\n\t}\n\n\tif err := c.BodyParser(request); err != nil {\n\t\tlog.ErrorStack(err)\n\t\treturn webutil.StatusBadRequest(c, err.Error())\n\t}\n\n\tif err := db.UpdatePageContent(c.Context(), request); err != nil {\n\t\tlog.ErrorStack(err)\n\t\treturn webutil.StatusInternalServerError(c)\n\t}\n\n\treturn webutil.Response(c, fiber.StatusOK, \"Page content updated\", nil)\n}\n// UpdatePageActive is ...\n// [patch] /api/_/page/:page_id/active"}