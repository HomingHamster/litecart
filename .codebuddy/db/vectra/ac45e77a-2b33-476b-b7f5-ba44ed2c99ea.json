{"chunk":0,"numChunks":1,"fileHash":"iT8j0N/gtASulDZxhKNXCzV5qweUnBXldcQaQhFnIZo=","filePath":"web/admin/src/pages/settings/webhook.vue","content":"<template>\n  <div class=\"pb-10\">\n    <header class=\"mb-4\">\n      <h1>Webhook events</h1>\n    </header>\n\n    <Form @submit=\"updateSetting\" v-slot=\"{ errors }\">\n      <FormInput v-model.trim=\"webhook.url\" :error=\"errors.webhook_url\" rules=\"url\" class=\"max-w-md\" id=\"webhook_url\" type=\"text\" title=\"webhook url\" ico=\"key\" />\n      <div class=\"pt-5\">\n        <FormButton type=\"submit\" name=\"Save\" color=\"green\" />\n      </div>\n    </Form>\n  </div>\n</template>\n\n<script setup>\nimport { onMounted, ref } from \"vue\";\nimport { FormInput, FormButton } from \"@/components/\";\nimport { showMessage } from \"@/utils/message\";\nimport { apiGet, apiUpdate } from \"@/utils/api\";\nimport { Form } from \"vee-validate\";\n\nconst webhook = ref({});\n\nonMounted(() => {\n  apiGet(`/api/_/settings/webhook`).then(res => {\n    if (res.success) {\n      webhook.value = res.result;\n    }\n  });\n});\n\nconst updateSetting = async () => {\n  await apiUpdate(`/api/_/settings/webhook`, webhook.value).then(res => {\n    if (res.success) {\n      showMessage(res.message);\n    } else {\n      showMessage(res.result, \"connextError\");\n    }\n  });\n};\n</script>\n"}