{"chunk":8,"numChunks":15,"fileHash":"dLUtq845VDWGGrS77+61hd7n4EwdJnc0aPkug0yaZTE=","filePath":"internal/queries/products.go","content":"package queries\n// UpdateProduct updates an existing product in the database with new values.\nfunc (q *ProductQueries) UpdateProduct(ctx context.Context, product *models.Product) error {\n\tmetadata, err := json.Marshal(product.Metadata)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tattributes, err := json.Marshal(product.Attributes)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tseo, err := json.Marshal(product.Seo)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tstmt, err := q.DB.PrepareContext(ctx, `\n\t\t\tUPDATE product SET \n\t\t\t\tname = ?, \n\t\t\t\tbrief = ?, \n\t\t\t\tdesc = ?, \n\t\t\t\tslug = ?, \n\t\t\t\tamount = ?, \n\t\t\t\tmetadata = ?, \n\t\t\t\tattribute = ?, \n\t\t\t\tseo = ?, \n\t\t\t\tupdated = datetime('now') \n\t\t\tWHERE id = ?\n\t\t`)\n\tif err != nil {\n\t\treturn err\n\t}\n\tdefer stmt.Close()\n\n\t_, err = stmt.ExecContext(ctx,\n\t\tproduct.Name,\n\t\tproduct.Brief,\n\t\tproduct.Description,\n\t\tproduct.Slug,\n\t\tproduct.Amount,\n\t\tmetadata,\n\t\tattributes,\n\t\tseo,\n\t\tproduct.ID,\n\t)\n\treturn err\n}\n// DeleteProduct removes a product from the database based on its ID.\nfunc (q *ProductQueries) DeleteProduct(ctx context.Context, id string) error {\n\t_, err := q.DB.ExecContext(ctx, `DELETE FROM product WHERE id = ?`, id)\n\treturn err\n}\n// IsProduct checks if a product with the given slug exists and is active,\n// and also has associated digital data or file that meets certain conditions."}