{"chunk":6,"numChunks":7,"fileHash":"J5Ak0Ij4rhitK/uI7uWEFcPqQxN9VG6Mju20cl3spWY=","filePath":"pkg/litepay/provider_paypal.go","content":"package litepay\nfunc (c *paypal) Checkout(payment *Payment, token string) (*Payment, error) {\n\tvar data struct {\n\t\tID            string `json:\"id\"`\n\t\tStatus        string `json:\"status\"`\n\t\tPurchaseUnits []struct {\n\t\t\tPayments struct {\n\t\t\t\tCaptures []struct {\n\t\t\t\t\tAmount struct {\n\t\t\t\t\t\tCurrencyCode string `json:\"currency_code\"`\n\t\t\t\t\t\tValue        string `json:\"value\"`\n\t\t\t\t\t} `json:\"amount\"`\n\t\t\t\t} `json:\"captures\"`\n\t\t\t} `json:\"payments\"`\n\t\t} `json:\"purchase_units\"`\n\t}\n\n\tif err := json.NewDecoder(resp.Body).Decode(&data); err != nil {\n\t\treturn nil, err\n\t}\n\n\treceiveAmount, _ := strconv.ParseFloat(data.PurchaseUnits[0].Payments.Captures[0].Amount.Value, 64)\n\tpayment.AmountTotal = int(receiveAmount * 100)\n\tpayment.Currency = data.PurchaseUnits[0].Payments.Captures[0].Amount.CurrencyCode\n\tpayment.MerchantID = data.ID\n\tpayment.Status = StatusPayment(PAYPAL, data.Status)"}