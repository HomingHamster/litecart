{"chunk":0,"numChunks":2,"fileHash":"aZ+Wmn8gmN0LZDO4Hf3RjB1lI5DitWR4Zz4g95Z2HHE=","filePath":"web/admin/src/components/form/Input.vue","content":"<template>\n  <div>\n    <label :for=\"id\" :class=\"error ? 'border-red-500' : ''\">\n      <Field :type=\"type\" :name=\"id\" :rules=\"rules\" :id=\"id\" v-model=\"model\" class=\"form-input field peer\" :placeholder=\"placeholder\" autocomplete=\"on\" />\n      <span v-if=\"title\" class=\"peer-placeholder-shown:top-1/2 peer-placeholder-shown:text-sm peer-focus:top-0 peer-focus:text-xs peer-placeholder-shown:text-gray-400 peer-focus:text-gray-700  title\">\n        {{ title }}\n      </span>\n      <span class=\"ico\" v-if=\"ico\">\n        <SvgIcon :name=\"ico\" stroke=\"currentColor\" class=\"h-5 w-5\" :class=\"error ? 'text-red-500' : 'text-gray-400'\" />\n      </span>\n    </label>\n    <span class=\"text-sm text-red-500 pl-4\" v-if=\"error\">{{ error }}</span>\n  </div>\n</template>\n\n<script setup>\nimport { computed } from 'vue';\nimport { Field } from 'vee-validate';\n\nconst props = defineProps({\n  modelValue: {\n    required: true\n  },\n  id: {\n    type: String,\n    default: 'name'\n  },\n  type: {\n    type: String,\n    default: 'text'\n  },\n  title: {\n    type: String,\n    default: 'Name'\n  },\n  color: {\n    type: String,\n    default: 'indigo'\n  },\n  rules: String,\n  ico: String,\n  error: String\n})\n\nconst placeholder = 'Enter ' + props.id\nconst emits = defineEmits(['update:modelValue'])\nconst model = computed({\n  get: () => {\n    return props.modelValue\n  },\n  set: (val) => {\n"}