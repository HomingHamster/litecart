{"chunk":0,"numChunks":1,"fileHash":"ckTa6SWgoGePkqE3FolHxtIjKDBa9aDYSY5y33aNOv0=","filePath":"internal/queries/install.go","content":"package queries\n\nimport (\n\t\"context\"\n\t\"database/sql\"\n\t\"fmt\"\n\n\t\"github.com/shurco/litecart/internal/models\"\n\t\"github.com/shurco/litecart/pkg/security\"\n)\n\n// InstallQueries is a struct that embeds a pointer to an sql.DB.\n// This allows for the struct to have all the methods of sql.DB,\n// enabling it to perform database operations directly.\ntype InstallQueries struct {\n\t*sql.DB\n}\n\n// Install performs the installation process for the cart system.\nfunc (q *InstallQueries) Install(ctx context.Context, i *models.Install) error {\n\tvar installed bool\n\n\tquery := `SELECT value FROM setting WHERE key = 'installed'`\n\tif err := q.DB.QueryRowContext(ctx, query).Scan(&installed); err != nil {\n\t\treturn err\n\t}\n\tif installed {\n\t\treturn fmt.Errorf(\"%s\", \"Rejected because you have already installed and configured the cart\")\n\t}\n\n\ttx, err := q.DB.BeginTx(ctx, nil)\n\tif err != nil {\n\t\treturn err\n\t}\n\tdefer tx.Rollback()\n\n\tpasswordHash := security.GeneratePassword(i.Password)\n\tjwt_secret, err := security.NewToken(passwordHash)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tsettings := map[string]string{\n\t\t\"installed\":  \"true\",\n\t\t\"domain\":     i.Domain,\n\t\t\"email\":      i.Email,\n\t\t\"password\":   passwordHash,\n\t\t\"jwt_secret\": jwt_secret,\n\t}\n\n\tquery = `UPDATE setting SET value = ? WHERE key = ?`\n\tstmt, err := tx.PrepareContext(ctx, query)\n\tif err != nil {\n\t\treturn err\n\t}\n\tdefer stmt.Close()\n\n\tfor key, value := range settings {\n\t\tif _, err := stmt.ExecContext(ctx, value, key); err != nil {\n\t\t\treturn err\n\t\t}\n\t}\n\n\treturn tx.Commit()\n}\n"}