{"chunk":3,"numChunks":16,"fileHash":"UXEJ+5LDhCVJB9FlFkrbRROxDBKQAS/5LQ4ry9WZVlc=","filePath":"internal/queries/products.go","content":"package queries\nfunc (q *ProductQueries) ListProducts(ctx context.Context, private bool, idList ...models.CartProduct) (*models.Products, error) {\n\tif len(idList) > 0 {\n\t\tfor _, item := range idList {\n\t\t\tparams = append(params, item.ProductID)\n\t\t}\n\t\tqueryAddon = fmt.Sprintf(\"AND product.id IN (%s)\", strings.Repeat(\"?, \", len(idList)-1)+\"?\")\n\t}\n\n\tif !private {\n\t\tquery += queryPublic\n\t}\n\n\trows, err := q.DB.QueryContext(ctx, query+queryAddon, params...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tdefer rows.Close()\n\n\tfor rows.Next() {\n\t\tvar image, digitalType sql.NullString\n\t\tvar digitalFilled sql.NullBool\n\t\tproduct := models.Product{}\n\t\terr := rows.Scan(\n\t\t\t&product.ID,\n\t\t\t&product.Name,\n\t\t\t&product.Brief,\n\t\t\t&product.Slug,\n\t\t\t&product.Amount,\n\t\t\t&product.Active,\n\t\t\t&digitalType,\n\t\t\t&digitalFilled,\n\t\t\t&image,\n\t\t\t&product.Created,\n\t\t)\n\t\tif err != nil {\n\t\t\treturn nil, err\n\t\t}\n\n\t\tif image.Valid && image.String != `[{\"id\":null,\"name\":null,\"ext\":null}]` {\n\t\t\tjson.Unmarshal([]byte(image.String), &product.Images)\n\t\t}\n\n\t\tproduct.Digital.Type = digitalType.String\n\t\tif private && digitalType.Valid {\n\t\t\tproduct.Digital.Filled = digitalFilled.Bool\n\t\t}\n\n\t\tproducts.Products = append(products.Products, product)\n\t}\n\n\tif err := rows.Err(); err != nil {\n\t\treturn nil, err\n\t}\n\n\t// Count total records"}