{"chunk":0,"numChunks":9,"fileHash":"QZ9HSztfAPTAK+jz/PH8NqcGg/fNPvUV/NhCsYhVn58=","filePath":"internal/queries/cart.go","content":"package queries\nimport (\n\t\"context\"\n\t\"database/sql\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"strconv\"\n\t\"strings\"\n\n\t\"github.com/shurco/litecart/internal/models\"\n\t\"github.com/shurco/litecart/pkg/errors\"\n\t\"github.com/shurco/litecart/pkg/litepay\"\n)\n// CartQueries is a struct that embeds a pointer to an sql.DB.\n// This allows for direct access to all the methods of sql.DB through CartQueries.\ntype CartQueries struct {\n\t*sql.DB\n}\n// PaymentList retrieves the status of different payment methods from the database.\nfunc (q *CartQueries) PaymentList(ctx context.Context) (map[string]bool, error) {\n\tpayments := map[string]bool{}\n\tkeys := []any{\n\t\t\"stripe_active\", \"paypal_active\", \"spectrocoin_active\",\n\t}\n\n\tquery := fmt.Sprintf(\"SELECT key, value FROM setting WHERE key IN (%s)\", strings.Repeat(\"?, \", len(keys)-1)+\"?\")\n\trows, err := q.DB.QueryContext(ctx, query, keys...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tdefer rows.Close()\n\n\tfor rows.Next() {\n\t\tvar key, value string\n\t\terr := rows.Scan(&key, &value)\n\t\tif err != nil {\n\t\t\treturn nil, err\n\t\t}\n\n\t\tvBool, err := strconv.ParseBool(value)\n\t\tif err != nil {\n\t\t\treturn nil, err\n\t\t}\n\t\tname := strings.ReplaceAll(key, \"_active\", \"\")\n\t\tpayments[name] = vBool\n\t}\n\n\tif err := rows.Err(); err != nil {\n\t\treturn nil, err\n\t}\n\n\treturn payments, nil\n}\n// Carts retrieves a list of carts from the database."}