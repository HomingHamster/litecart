{"chunk":0,"numChunks":1,"fileHash":"RV+qEMwI9p/Qenw8HSwcbQ41bTODqV7v3cpISlcB+ik=","filePath":"internal/mailer/letter.go","content":"package mailer\nimport (\n\t\"context\"\n\t\"encoding/json\"\n\t\"time\"\n\n\t\"github.com/shurco/litecart/internal/models\"\n\t\"github.com/shurco/litecart/internal/queries\"\n)\n// SendTestLetter is ...\nfunc SendTestLetter(letterName string) error {\n\tdb := queries.DB()\n\n\tctx, cancel := context.WithTimeout(context.Background(), 5*time.Second)\n\tdefer cancel()\n\n\tmailSetting, err := queries.GetSettingByGroup[models.Mail](ctx, db)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tsettingEmail, err := db.GetSettingByKey(ctx, \"email\", letterName)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tletter := &models.MessageMail{\n\t\tTo: settingEmail[\"email\"].Value.(string),\n\t\tLetter: models.Letter{\n\t\t\tSubject: \"litecart test smtp settings\",\n\t\t\tText:    \"test message\",\n\t\t},\n\t\tData: map[string]string{\n\t\t\t\"Payment_URL\":    \"https://payment.com/order/1234567890\",\n\t\t\t\"Admin_Email\":    \"Admin Name <admin@mail.com>\",\n\t\t\t\"Site_Name\":      \"Site name\",\n\t\t\t\"Amount_Payment\": \"21.00 USD\",\n\t\t},\n\t}\n\n\tif letterName != \"smtp\" {\n\t\tif err := json.Unmarshal([]byte(settingEmail[letterName].Value.(string)), &letter.Letter); err != nil {\n\t\t\treturn err\n\t\t}\n\t}\n\n\tif err := SendMail(mailSetting, letter); err != nil {\n\t\treturn err\n\t}\n\n\treturn nil\n}\n// SendPrepaymentLetter is ..."}