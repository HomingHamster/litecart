{"chunk":1,"numChunks":2,"fileHash":"D9MWvLhFmmS2OZWlCnxdADB7FH+HgBwSXgD2jVwxG30=","filePath":"internal/handlers/private/auth.go","content":"package handlers\nfunc SignIn(c *fiber.Ctx) error {\n\tdb := queries.DB()\n\tlog := logging.New()\n\trequest := new(models.SignIn)\n\n\tif err := c.BodyParser(request); err != nil {\n\t\tlog.ErrorStack(err)\n\t\treturn webutil.StatusBadRequest(c, err.Error())\n\t}\n\n\tif err := request.Validate(); err != nil {\n\t\tlog.ErrorStack(err)\n\t\treturn webutil.StatusBadRequest(c, err.Error())\n\t}\n\n\tpasswordHash, err := db.GetPasswordByEmail(c.Context(), request.Email)\n\tif err != nil {\n\t\tlog.ErrorStack(err)\n\t\treturn webutil.StatusInternalServerError(c)\n\t}\n\n\tcompareUserPassword := security.ComparePasswords(passwordHash, request.Password)\n\tif !compareUserPassword {\n\t\treturn webutil.StatusBadRequest(c, \"wrong user email address or password\")\n\t}\n\n\t// Generate a new pair of access and refresh tokens.\n\tsettingJWT, err := queries.GetSettingByGroup[models.JWT](c.Context(), db)\n\tif err != nil {\n\t\tlog.ErrorStack(err)\n\t\treturn webutil.StatusInternalServerError(c)\n\t}\n\n\tuserID := uuid.New()\n\texpires := time.Now().Add(time.Hour * time.Duration(settingJWT.ExpireHours)).Unix()\n\ttoken, err := jwtutil.GenerateNewToken(settingJWT.Secret, userID.String(), expires, nil)\n\tif err != nil {\n\t\tlog.ErrorStack(err)\n\t\treturn webutil.StatusInternalServerError(c)\n\t}\n\n\t// Add session record\n\tif err := db.AddSession(c.Context(), userID.String(), \"admin\", expires); err != nil {\n\t\tlog.ErrorStack(err)\n\t\treturn webutil.StatusInternalServerError(c)\n\t}\n\n\tc.Cookie(&fiber.Cookie{\n\t\tName:     \"token\",\n\t\tValue:    token,\n\t\tExpires:  time.Now().Add(24 * time.Hour),\n\t\tSameSite: \"lax\",\n\t})\n\n\treturn webutil.StatusOK(c, \"Token\", token)\n}\n// SignOut is ...\n// [post] /api/sign/out"}