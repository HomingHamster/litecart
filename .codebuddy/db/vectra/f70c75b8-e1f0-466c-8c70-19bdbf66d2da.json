{"chunk":5,"numChunks":9,"fileHash":"QZ9HSztfAPTAK+jz/PH8NqcGg/fNPvUV/NhCsYhVn58=","filePath":"internal/queries/cart.go","content":"package queries\nfunc (q *CartQueries) CartLetterPurchase(ctx context.Context, cartID string) (*models.MessageMail, error) {\n\tmail := &models.MessageMail{}\n\n\t// Fetch the email, cart information, and 'email' setting in one query.\n\tvar cartJSON string\n\terr := q.QueryRowContext(ctx, `\n        SELECT email, cart\n        FROM cart\n        WHERE payment_status = ? AND id = ?\n    `, litepay.PAID, cartID).Scan(&mail.To, &cartJSON)\n\tif err != nil {\n\t\tif err == sql.ErrNoRows {\n\t\t\treturn nil, errors.ErrPageNotFound\n\t\t}\n\t\treturn nil, err\n\t}\n\n\t// Unmarshal the products from the cart JSON.\n\tproducts := []models.CartProduct{}\n\tif err := json.Unmarshal([]byte(cartJSON), &products); err != nil {\n\t\treturn nil, err\n\t}\n\n\t// Begin a transaction.\n\ttx, err := q.DB.BeginTx(ctx, nil)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tdefer tx.Rollback()\n\n\tkeys := []models.Data{}\n\tfiles := []models.File{}\n\tfor _, cart := range products {"}